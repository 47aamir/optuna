# Run tests and integration tests on Windows, which are triggered by each master push.
# Currently, Python3.8 is only used as an environment.
# This is mainly for the sake of speed.
name: windows-tests

on:
  push:
    branches:
      - windows-ci
  pull_request:
    paths:
      - '.github/workflows/windows-tests.yml'
  schedule:
    - cron: '0 23 * * SUN-THU'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref == 'refs/heads/master' && github.run_number || github.ref }}
  cancel-in-progress: true

jobs:
  tests-windows:
    if: (github.event_name == 'schedule' && github.repository == 'gen740/optuna') || (github.event_name != 'schedule')
    runs-on: windows-latest

    strategy:
      matrix:
        python-version: ['3.9']

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup cache
      uses: actions/cache@v3
      env:
        cache-name: test
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}-v1
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version
        pip install --progress-bar off .[test]
        pip install --progress-bar off .[optional]

    - name: Scheduled tests
      if:  ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
      run: |
        pytest -m "not integration"
      env:
        SQLALCHEMY_WARN_20: 1

    - name: Tests
      if:  ${{ github.event_name != 'schedule' }}
      run: |
        pytest -m "not integration and not slow"

  tests-integration-windows:
    runs-on: windows-latest

    # Not intended for forks.
    if: github.repository == 'gen740/optuna'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python3.8
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Setup cache
      uses: actions/cache@v3
      env:
        cache-name: test-integration
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-3.8-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}-v1
        restore-keys: |
          ${{ runner.os }}-3.8-${{ env.cache-name }}-${{ hashFiles('**/pyproject.toml') }}

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install --progress-bar off -U setuptools
        # Install minimal dependencies and confirm that `import optuna` is successful.
        pip install --progress-bar off .
        python -c 'import optuna'
        optuna --version
        pip install --progress-bar off .[test]
        pip install --progress-bar off .[optional]
        pip install --progress-bar off .[integration]

    - name: Output installed packages
      run: |
        pip freeze --all

    - name: Tests
      run: |
        pytest tests -m "integration" --ignore tests/integration_tests/test_pytorch_lightning.py

      env:
        OMP_NUM_THREADS: 1
    #
    # - name: Tests MPI
    #   run: |
    #     export OMPI_MCA_rmaps_base_oversubscribe=yes
    #     mpirun -n 2 -- pytest tests/integration_tests/test_chainermn.py
    #     mpirun -n 2 -- pytest tests/integration_tests/test_pytorch_distributed.py
    #   env:
    #     OMP_NUM_THREADS: 1
